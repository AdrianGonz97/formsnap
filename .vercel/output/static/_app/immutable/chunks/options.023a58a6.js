import{s as js,r as ms,A as Vs,a as I,f as m,c as V,g as D,h as As,M as v,d as o,j as C,i as r,x as as,l as E,m as _,y as b,P as ts,e as x,R as es}from"./scheduler.9a75ed56.js";import{S as Ms,i as Ts,b as f,d as u,m as B,a as h,t as $,e as g}from"./index.7ac402cb.js";import{g as Hs,a as Ps}from"./index.96f6542b.js";import{L as qs,P as ls,a as ns,H as Ls,A as zs}from"./layout.af29b115.js";function Gs(y){let s;return{c(){s=E("Superforms documentation")},l(e){s=_(e,"Superforms documentation")},m(e,p){r(e,s,p)},d(e){e&&o(s)}}}function Js(y){let s,e,p="<Form.Root/>",t,n,i="superForm",A,c,F,ps;return c=new zs({props:{href:"https://superforms.rocks/api#superform-options",rel:"nofollow",$$slots:{default:[Gs]},$$scope:{ctx:y}}}),{c(){s=E("The "),e=m("code"),e.textContent=p,t=E(" component accepts the same options that can be passed to the "),n=m("code"),n.textContent=i,A=E(" function when using Superforms, and a list of these options can be found in the "),f(c.$$.fragment),F=E(".")},l(d){s=_(d,"The "),e=D(d,"CODE",{"data-svelte-h":!0}),v(e)!=="svelte-13hbwi8"&&(e.textContent=p),t=_(d," component accepts the same options that can be passed to the "),n=D(d,"CODE",{"data-svelte-h":!0}),v(n)!=="svelte-1vw9uxx"&&(n.textContent=i),A=_(d," function when using Superforms, and a list of these options can be found in the "),u(c.$$.fragment,d),F=_(d,".")},m(d,w){r(d,s,w),r(d,e,w),r(d,t,w),r(d,n,w),r(d,A,w),B(c,d,w),r(d,F,w),ps=!0},p(d,w){const k={};w&2&&(k.$$scope={dirty:w,ctx:d}),c.$set(k)},i(d){ps||(h(c.$$.fragment,d),ps=!0)},o(d){$(c.$$.fragment,d),ps=!1},d(d){d&&(o(s),o(e),o(t),o(n),o(A),o(F)),g(c,d)}}}function Ks(y){let s,e,p="superForm",t;return{c(){s=E("So when using Superforms by itself, you would pass the options to the "),e=m("code"),e.textContent=p,t=E(" function, like so:")},l(n){s=_(n,"So when using Superforms by itself, you would pass the options to the "),e=D(n,"CODE",{"data-svelte-h":!0}),v(e)!=="svelte-1vw9uxx"&&(e.textContent=p),t=_(n," function, like so:")},m(n,i){r(n,s,i),r(n,e,i),r(n,t,i)},p:b,d(n){n&&(o(s),o(e),o(t))}}}function Ns(y){let s,e=`<code data-language="svelte" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">script</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">ts</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">superForm</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">sveltekit-superforms/client</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">schema</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">./schema.ts</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #9D7CD8">const</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">form</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">=</span><span style="color: #C0CAF5"> </span><span style="color: #7AA2F7">superForm</span><span style="color: #9ABDF5">(</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form</span><span style="color: #89DDFF">,</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #73DACA">validators</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> schema</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #7AA2F7">onSubmit</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">()</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">=></span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #7AA2F7">onError</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">()</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">=></span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something else</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span></span>
<span data-line=""><span style="color: #89DDFF">    </span><span style="color: #A6AAAD">// ...</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #9ABDF5">&#125;)</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">script</span><span style="color: #BA3C97">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function Qs(y){let s,e=`<code data-language="svelte" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">script</span><span style="color: #69323D"> </span><span style="color: #5A4A78">lang</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">ts</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">superForm</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">sveltekit-superforms/client</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">schema</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">./schema.ts</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #565F89; font-style: italic">const</span><span style="color: #343B58"> </span><span style="color: #4C505E">&#123;</span><span style="color: #343B58"> </span><span style="color: #5A4A78">form</span><span style="color: #343B58"> </span><span style="color: #4C505E">&#125;</span><span style="color: #343B58"> </span><span style="color: #4C505E">=</span><span style="color: #343B58"> </span><span style="color: #34548A">superForm</span><span style="color: #484C61">(</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form</span><span style="color: #4C505E">,</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #33635C">validators</span><span style="color: #4C505E">:</span><span style="color: #343B58"> schema</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #34548A">onSubmit</span><span style="color: #4C505E">:</span><span style="color: #343B58"> </span><span style="color: #484C61">()</span><span style="color: #343B58"> </span><span style="color: #5A4A78">=></span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #34548A">onError</span><span style="color: #4C505E">:</span><span style="color: #343B58"> </span><span style="color: #484C61">()</span><span style="color: #343B58"> </span><span style="color: #5A4A78">=></span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something else</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span></span>
<span data-line=""><span style="color: #4C505E">    </span><span style="color: #9699A3; font-style: italic">// ...</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #484C61">&#125;)</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">script</span><span style="color: #B05467">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function Us(y){let s,e,p="<Form.Root/>",t,n,i="<script>",A;return{c(){s=E("But when using Formsnap, you can pass those same options to the "),e=m("code"),e.textContent=p,t=E(" component. We export a type for these options, so you can define it in your "),n=m("code"),n.textContent=i,A=E(" tag or in a separate file, and then pass it to the component like so:")},l(c){s=_(c,"But when using Formsnap, you can pass those same options to the "),e=D(c,"CODE",{"data-svelte-h":!0}),v(e)!=="svelte-13hbwi8"&&(e.textContent=p),t=_(c," component. We export a type for these options, so you can define it in your "),n=D(c,"CODE",{"data-svelte-h":!0}),v(n)!=="svelte-xpqqe6"&&(n.textContent=i),A=_(c," tag or in a separate file, and then pass it to the component like so:")},m(c,F){r(c,s,F),r(c,e,F),r(c,t,F),r(c,n,F),r(c,A,F)},p:b,d(c){c&&(o(s),o(e),o(t),o(n),o(A))}}}function Xs(y){let s,e=`<code data-language="svelte" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">script</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">ts</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">Form</span><span style="color: #89DDFF">,</span><span style="color: #9ABDF5"> </span><span style="color: #BB9AF7">type</span><span style="color: #9ABDF5"> </span><span style="color: #52BACD">Options</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">formsnap</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">schema</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">./schema.ts</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">export</span><span style="color: #C0CAF5"> </span><span style="color: #9D7CD8">let</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">data</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> PageData</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #9D7CD8">const</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">options</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> Options </span><span style="color: #89DDFF">=</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #73DACA">validators</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> schema</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #7AA2F7">onSubmit</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">()</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">=></span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #C0CAF5">    </span><span style="color: #7AA2F7">onError</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">()</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">=></span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something else</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span></span>
<span data-line=""><span style="color: #89DDFF">    </span><span style="color: #A6AAAD">// ...</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">script</span><span style="color: #BA3C97">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #C0CAF5">options</span><span style="color: #BB9AF7">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">form</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #C0CAF5">schema</span><span style="color: #BB9AF7">&#125;</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">&#x3C;!-- ... --></span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #BA3C97">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function Ys(y){let s,e=`<code data-language="svelte" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">script</span><span style="color: #69323D"> </span><span style="color: #5A4A78">lang</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">ts</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">Form</span><span style="color: #4C505E">,</span><span style="color: #484C61"> </span><span style="color: #5A4A78">type</span><span style="color: #484C61"> </span><span style="color: #166775">Options</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">formsnap</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">schema</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">./schema.ts</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">export</span><span style="color: #343B58"> </span><span style="color: #565F89; font-style: italic">let</span><span style="color: #343B58"> </span><span style="color: #5A4A78">data</span><span style="color: #4C505E">:</span><span style="color: #343B58"> PageData</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #565F89; font-style: italic">const</span><span style="color: #343B58"> </span><span style="color: #5A4A78">options</span><span style="color: #4C505E">:</span><span style="color: #343B58"> Options </span><span style="color: #4C505E">=</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #33635C">validators</span><span style="color: #4C505E">:</span><span style="color: #343B58"> schema</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #34548A">onSubmit</span><span style="color: #4C505E">:</span><span style="color: #343B58"> </span><span style="color: #484C61">()</span><span style="color: #343B58"> </span><span style="color: #5A4A78">=></span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #343B58">    </span><span style="color: #34548A">onError</span><span style="color: #4C505E">:</span><span style="color: #343B58"> </span><span style="color: #484C61">()</span><span style="color: #343B58"> </span><span style="color: #5A4A78">=></span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something else</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span></span>
<span data-line=""><span style="color: #4C505E">    </span><span style="color: #9699A3; font-style: italic">// ...</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">script</span><span style="color: #B05467">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #343B58">options</span><span style="color: #5A4A78">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">form</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #343B58">schema</span><span style="color: #5A4A78">&#125;</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">&#x3C;!-- ... --></span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #B05467">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function Zs(y){let s,e,p="<Form.Root />",t;return{c(){s=E("Alternatively, you can also just pass the options directly to the "),e=m("code"),e.textContent=p,t=E(" component, however, your code may become less readable the more options you pass:")},l(n){s=_(n,"Alternatively, you can also just pass the options directly to the "),e=D(n,"CODE",{"data-svelte-h":!0}),v(e)!=="svelte-1m1ah8c"&&(e.textContent=p),t=_(n," component, however, your code may become less readable the more options you pass:")},m(n,i){r(n,s,i),r(n,e,i),r(n,t,i)},p:b,d(n){n&&(o(s),o(e),o(t))}}}function sa(y){let s,e=`<code data-language="svelte" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">script</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">ts</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">Form</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">formsnap</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">schema</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">./schema.ts</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">export</span><span style="color: #C0CAF5"> </span><span style="color: #9D7CD8">let</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">data</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5"> PageData</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">script</span><span style="color: #BA3C97">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span></span>
<span data-line=""><span style="color: #DE5971">  </span><span style="color: #BB9AF7">options</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #DE5971">    </span><span style="color: #73DACA">validators</span><span style="color: #89DDFF">:</span><span style="color: #DE5971"> </span><span style="color: #C0CAF5">schema</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #DE5971">    </span><span style="color: #7AA2F7">onSubmit</span><span style="color: #89DDFF">:</span><span style="color: #DE5971"> </span><span style="color: #9ABDF5">()</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">=></span><span style="color: #DE5971"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span><span style="color: #89DDFF">,</span></span>
<span data-line=""><span style="color: #DE5971">    </span><span style="color: #7AA2F7">onError</span><span style="color: #89DDFF">:</span><span style="color: #DE5971"> </span><span style="color: #9ABDF5">()</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">=></span><span style="color: #DE5971"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #89DDFF">      </span><span style="color: #A6AAAD">// do something else</span></span>
<span data-line=""><span style="color: #9ABDF5">    &#125;</span></span>
<span data-line=""><span style="color: #89DDFF">    </span><span style="color: #A6AAAD">// ...</span></span>
<span data-line=""><span style="color: #DE5971">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #7DCFFF">&#125;</span></span>
<span data-line=""><span style="color: #DE5971">  </span><span style="color: #BB9AF7">form</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form&#125;</span></span>
<span data-line=""><span style="color: #DE5971">  </span><span style="color: #BB9AF7">&#123;</span><span style="color: #C0CAF5">schema</span><span style="color: #BB9AF7">&#125;</span></span>
<span data-line=""><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">&#x3C;!-- ... --></span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #BA3C97">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function aa(y){let s,e=`<code data-language="svelte" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">script</span><span style="color: #69323D"> </span><span style="color: #5A4A78">lang</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">ts</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">Form</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">formsnap</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">schema</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">./schema.ts</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">export</span><span style="color: #343B58"> </span><span style="color: #565F89; font-style: italic">let</span><span style="color: #343B58"> </span><span style="color: #5A4A78">data</span><span style="color: #4C505E">:</span><span style="color: #343B58"> PageData</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">script</span><span style="color: #B05467">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span></span>
<span data-line=""><span style="color: #69323D">  </span><span style="color: #5A4A78">options</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #69323D">    </span><span style="color: #33635C">validators</span><span style="color: #4C505E">:</span><span style="color: #69323D"> </span><span style="color: #343B58">schema</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #69323D">    </span><span style="color: #34548A">onSubmit</span><span style="color: #4C505E">:</span><span style="color: #69323D"> </span><span style="color: #484C61">()</span><span style="color: #69323D"> </span><span style="color: #5A4A78">=></span><span style="color: #69323D"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span><span style="color: #4C505E">,</span></span>
<span data-line=""><span style="color: #69323D">    </span><span style="color: #34548A">onError</span><span style="color: #4C505E">:</span><span style="color: #69323D"> </span><span style="color: #484C61">()</span><span style="color: #69323D"> </span><span style="color: #5A4A78">=></span><span style="color: #69323D"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #4C505E">      </span><span style="color: #9699A3; font-style: italic">// do something else</span></span>
<span data-line=""><span style="color: #484C61">    &#125;</span></span>
<span data-line=""><span style="color: #4C505E">    </span><span style="color: #9699A3; font-style: italic">// ...</span></span>
<span data-line=""><span style="color: #69323D">  </span><span style="color: #484C61">&#125;</span><span style="color: #0F4B6E">&#125;</span></span>
<span data-line=""><span style="color: #69323D">  </span><span style="color: #5A4A78">form</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form&#125;</span></span>
<span data-line=""><span style="color: #69323D">  </span><span style="color: #5A4A78">&#123;</span><span style="color: #343B58">schema</span><span style="color: #5A4A78">&#125;</span></span>
<span data-line=""><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">&#x3C;!-- ... --></span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #B05467">></span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function na(y){let s;return{c(){s=E("Default options")},l(e){s=_(e,"Default options")},m(e,p){r(e,s,p)},d(e){e&&o(s)}}}function ta(y){let s;return{c(){s=E("We do apply a couple options by default, here's what they are:")},l(e){s=_(e,"We do apply a couple options by default, here's what they are:")},m(e,p){r(e,s,p)},d(e){e&&o(s)}}}function ea(y){let s,e=`<code data-language="ts" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #9D7CD8">const</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">defaultOptions</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">=</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * The schema you pass to the &#x3C;Form.Root/> component will be</span></span>
<span data-line=""><span style="color: #A6AAAD">   * used for client-side validation.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">validators</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">schema</span><span style="color: #89DDFF">,</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * We disabled the &#96;taintedMessage&#96; option by default, as we</span></span>
<span data-line=""><span style="color: #A6AAAD">   * found it to not be desirable in specific situations,</span></span>
<span data-line=""><span style="color: #A6AAAD">   * considering you don't always have control over the message</span></span>
<span data-line=""><span style="color: #A6AAAD">   * that is displayed, and can potentially be confusing to the user.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">taintedMessage</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #FF9E64">null</span></span>
<span data-line=""><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function pa(y){let s,e=`<code data-language="ts" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #565F89; font-style: italic">const</span><span style="color: #343B59"> </span><span style="color: #5A4A78">defaultOptions</span><span style="color: #343B59"> </span><span style="color: #4C505E">=</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * The schema you pass to the &#x3C;Form.Root/> component will be</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * used for client-side validation.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">validators</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">schema</span><span style="color: #4C505E">,</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * We disabled the &#96;taintedMessage&#96; option by default, as we</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * found it to not be desirable in specific situations,</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * considering you don't always have control over the message</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * that is displayed, and can potentially be confusing to the user.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">taintedMessage</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #965027">null</span></span>
<span data-line=""><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span></code>`,p;return{c(){s=new ts(!1),p=x(),this.h()},l(t){s=es(t,!1),p=x(),this.h()},h(){s.a=p},m(t,n){s.m(e,t,n),r(t,p,n)},p:b,d(t){t&&(o(p),s.d())}}}function la(y){let s,e,p="options",t,n,i="<Form.Root/>",A;return{c(){s=E("Of course, you can override these options by explicitly passing different values via the "),e=m("code"),e.textContent=p,t=E(" prop to the "),n=m("code"),n.textContent=i,A=E(" component. If you don't explicitly pass those options, the default values will be merged with the options you pass, so you can still use the defaults while passing other options.")},l(c){s=_(c,"Of course, you can override these options by explicitly passing different values via the "),e=D(c,"CODE",{"data-svelte-h":!0}),v(e)!=="svelte-b8vks4"&&(e.textContent=p),t=_(c," prop to the "),n=D(c,"CODE",{"data-svelte-h":!0}),v(n)!=="svelte-13hbwi8"&&(n.textContent=i),A=_(c," component. If you don't explicitly pass those options, the default values will be merged with the options you pass, so you can still use the defaults while passing other options.")},m(c,F){r(c,s,F),r(c,e,F),r(c,t,F),r(c,n,F),r(c,A,F)},p:b,d(c){c&&(o(s),o(e),o(t),o(n),o(A))}}}function oa(y){let s,e,p,t,n,i,A="+page.svelte",c,F,ps="+page.svelte",d,w,k,os,O,P,Ds="+page.svelte",q,W,fs="+page.svelte",L,rs,z,cs,R,j,us="+page.svelte.svelte",G,M,Bs="+page.svelte.svelte",J,ys,K,is,N,ds,S,T,hs="Form.Root",Q,H,$s="Form.Root",U,Cs,X,Fs;return s=new ls({props:{$$slots:{default:[Js]},$$scope:{ctx:y}}}),p=new ls({props:{$$slots:{default:[Ks]},$$scope:{ctx:y}}}),c=new ns({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[Ns]},$$scope:{ctx:y}}}),d=new ns({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[Qs]},$$scope:{ctx:y}}}),k=new ls({props:{$$slots:{default:[Us]},$$scope:{ctx:y}}}),q=new ns({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[Xs]},$$scope:{ctx:y}}}),L=new ns({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[Ys]},$$scope:{ctx:y}}}),z=new ls({props:{$$slots:{default:[Zs]},$$scope:{ctx:y}}}),G=new ns({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[sa]},$$scope:{ctx:y}}}),J=new ns({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[aa]},$$scope:{ctx:y}}}),K=new Ls({props:{$$slots:{default:[na]},$$scope:{ctx:y}}}),N=new ls({props:{$$slots:{default:[ta]},$$scope:{ctx:y}}}),Q=new ns({props:{"data-language":"ts","data-theme":"dark",$$slots:{default:[ea]},$$scope:{ctx:y}}}),U=new ns({props:{"data-language":"ts","data-theme":"light","data-non-pp":!0,$$slots:{default:[pa]},$$scope:{ctx:y}}}),X=new ls({props:{$$slots:{default:[la]},$$scope:{ctx:y}}}),{c(){f(s.$$.fragment),e=I(),f(p.$$.fragment),t=I(),n=m("div"),i=m("div"),i.textContent=A,f(c.$$.fragment),F=m("div"),F.textContent=ps,f(d.$$.fragment),w=I(),f(k.$$.fragment),os=I(),O=m("div"),P=m("div"),P.textContent=Ds,f(q.$$.fragment),W=m("div"),W.textContent=fs,f(L.$$.fragment),rs=I(),f(z.$$.fragment),cs=I(),R=m("div"),j=m("div"),j.textContent=us,f(G.$$.fragment),M=m("div"),M.textContent=Bs,f(J.$$.fragment),ys=I(),f(K.$$.fragment),is=I(),f(N.$$.fragment),ds=I(),S=m("div"),T=m("div"),T.textContent=hs,f(Q.$$.fragment),H=m("div"),H.textContent=$s,f(U.$$.fragment),Cs=I(),f(X.$$.fragment),this.h()},l(a){u(s.$$.fragment,a),e=V(a),u(p.$$.fragment,a),t=V(a),n=D(a,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var l=As(n);i=D(l,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(i)!=="svelte-1g0r5dp"&&(i.textContent=A),u(c.$$.fragment,l),F=D(l,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(F)!=="svelte-11puv5"&&(F.textContent=ps),u(d.$$.fragment,l),l.forEach(o),w=V(a),u(k.$$.fragment,a),os=V(a),O=D(a,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var Y=As(O);P=D(Y,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(P)!=="svelte-1g0r5dp"&&(P.textContent=Ds),u(q.$$.fragment,Y),W=D(Y,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(W)!=="svelte-11puv5"&&(W.textContent=fs),u(L.$$.fragment,Y),Y.forEach(o),rs=V(a),u(z.$$.fragment,a),cs=V(a),R=D(a,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var Z=As(R);j=D(Z,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(j)!=="svelte-1zdj0m"&&(j.textContent=us),u(G.$$.fragment,Z),M=D(Z,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(M)!=="svelte-1iw4vn0"&&(M.textContent=Bs),u(J.$$.fragment,Z),Z.forEach(o),ys=V(a),u(K.$$.fragment,a),is=V(a),u(N.$$.fragment,a),ds=V(a),S=D(a,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var ss=As(S);T=D(ss,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(T)!=="svelte-1bst560"&&(T.textContent=hs),u(Q.$$.fragment,ss),H=D(ss,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),v(H)!=="svelte-1lobgky"&&(H.textContent=$s),u(U.$$.fragment,ss),ss.forEach(o),Cs=V(a),u(X.$$.fragment,a),this.h()},h(){C(i,"data-rehype-pretty-code-title",""),C(i,"data-language","svelte"),C(i,"data-theme","dark"),C(F,"data-rehype-pretty-code-title",""),C(F,"data-language","svelte"),C(F,"data-theme","light"),C(n,"data-rehype-pretty-code-fragment",""),C(n,"data-metadata",""),C(P,"data-rehype-pretty-code-title",""),C(P,"data-language","svelte"),C(P,"data-theme","dark"),C(W,"data-rehype-pretty-code-title",""),C(W,"data-language","svelte"),C(W,"data-theme","light"),C(O,"data-rehype-pretty-code-fragment",""),C(O,"data-metadata",""),C(j,"data-rehype-pretty-code-title",""),C(j,"data-language","svelte"),C(j,"data-theme","dark"),C(M,"data-rehype-pretty-code-title",""),C(M,"data-language","svelte"),C(M,"data-theme","light"),C(R,"data-rehype-pretty-code-fragment",""),C(R,"data-metadata",""),C(T,"data-rehype-pretty-code-title",""),C(T,"data-language","ts"),C(T,"data-theme","dark"),C(H,"data-rehype-pretty-code-title",""),C(H,"data-language","ts"),C(H,"data-theme","light"),C(S,"data-rehype-pretty-code-fragment",""),C(S,"data-metadata","")},m(a,l){B(s,a,l),r(a,e,l),B(p,a,l),r(a,t,l),r(a,n,l),as(n,i),B(c,n,null),as(n,F),B(d,n,null),r(a,w,l),B(k,a,l),r(a,os,l),r(a,O,l),as(O,P),B(q,O,null),as(O,W),B(L,O,null),r(a,rs,l),B(z,a,l),r(a,cs,l),r(a,R,l),as(R,j),B(G,R,null),as(R,M),B(J,R,null),r(a,ys,l),B(K,a,l),r(a,is,l),B(N,a,l),r(a,ds,l),r(a,S,l),as(S,T),B(Q,S,null),as(S,H),B(U,S,null),r(a,Cs,l),B(X,a,l),Fs=!0},p(a,l){const Y={};l&2&&(Y.$$scope={dirty:l,ctx:a}),s.$set(Y);const Z={};l&2&&(Z.$$scope={dirty:l,ctx:a}),p.$set(Z);const ss={};l&2&&(ss.$$scope={dirty:l,ctx:a}),c.$set(ss);const gs={};l&2&&(gs.$$scope={dirty:l,ctx:a}),d.$set(gs);const Es={};l&2&&(Es.$$scope={dirty:l,ctx:a}),k.$set(Es);const _s={};l&2&&(_s.$$scope={dirty:l,ctx:a}),q.$set(_s);const vs={};l&2&&(vs.$$scope={dirty:l,ctx:a}),L.$set(vs);const xs={};l&2&&(xs.$$scope={dirty:l,ctx:a}),z.$set(xs);const ws={};l&2&&(ws.$$scope={dirty:l,ctx:a}),G.$set(ws);const bs={};l&2&&(bs.$$scope={dirty:l,ctx:a}),J.$set(bs);const ks={};l&2&&(ks.$$scope={dirty:l,ctx:a}),K.$set(ks);const Os={};l&2&&(Os.$$scope={dirty:l,ctx:a}),N.$set(Os);const Rs={};l&2&&(Rs.$$scope={dirty:l,ctx:a}),Q.$set(Rs);const Ss={};l&2&&(Ss.$$scope={dirty:l,ctx:a}),U.$set(Ss);const Is={};l&2&&(Is.$$scope={dirty:l,ctx:a}),X.$set(Is)},i(a){Fs||(h(s.$$.fragment,a),h(p.$$.fragment,a),h(c.$$.fragment,a),h(d.$$.fragment,a),h(k.$$.fragment,a),h(q.$$.fragment,a),h(L.$$.fragment,a),h(z.$$.fragment,a),h(G.$$.fragment,a),h(J.$$.fragment,a),h(K.$$.fragment,a),h(N.$$.fragment,a),h(Q.$$.fragment,a),h(U.$$.fragment,a),h(X.$$.fragment,a),Fs=!0)},o(a){$(s.$$.fragment,a),$(p.$$.fragment,a),$(c.$$.fragment,a),$(d.$$.fragment,a),$(k.$$.fragment,a),$(q.$$.fragment,a),$(L.$$.fragment,a),$(z.$$.fragment,a),$(G.$$.fragment,a),$(J.$$.fragment,a),$(K.$$.fragment,a),$(N.$$.fragment,a),$(Q.$$.fragment,a),$(U.$$.fragment,a),$(X.$$.fragment,a),Fs=!1},d(a){a&&(o(e),o(t),o(n),o(w),o(os),o(O),o(rs),o(cs),o(R),o(ys),o(is),o(ds),o(S),o(Cs)),g(s,a),g(p,a),g(c),g(d),g(k,a),g(q),g(L),g(z,a),g(G),g(J),g(K,a),g(N,a),g(Q),g(U),g(X,a)}}}function ra(y){let s,e;const p=[y[0],Ws];let t={$$slots:{default:[oa]},$$scope:{ctx:y}};for(let n=0;n<p.length;n+=1)t=ms(t,p[n]);return s=new qs({props:t}),{c(){f(s.$$.fragment)},l(n){u(s.$$.fragment,n)},m(n,i){B(s,n,i),e=!0},p(n,[i]){const A=i&1?Hs(p,[i&1&&Ps(n[0]),i&0&&Ps(Ws)]):{};i&2&&(A.$$scope={dirty:i,ctx:n}),s.$set(A)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){$(s.$$.fragment,n),e=!1},d(n){g(s,n)}}}const Ws={title:"Options",description:"Configure the behavior of your forms."};function ca(y,s,e){return y.$$set=p=>{e(0,s=ms(ms({},s),Vs(p)))},s=Vs(s),[s]}class Fa extends Ms{constructor(s){super(),Ts(this,s,ca,ra,js,{})}}export{Fa as default,Ws as metadata};
