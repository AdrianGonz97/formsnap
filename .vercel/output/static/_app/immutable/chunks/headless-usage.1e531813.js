import{s as Ua,r as oa,A as qa,a as L,f as B,c as S,g as F,h as ks,d as p,M as h,j,i as o,x as ta,l as d,m as D,y as P,P as q,e as M,R as z}from"./scheduler.9a75ed56.js";import{S as Ya,i as Ga,b as _,d as g,m as x,a as w,t as b,e as T}from"./index.7ac402cb.js";import{g as Ja,a as za}from"./index.96f6542b.js";import{L as Qa,P as V,H as pa,a as W,A as Xa}from"./layout.af29b115.js";import{H as la}from"./h3.39d5449e.js";function Za(c){let a,n,l="quite",t;return{c(){a=d("Although the provided components are the recommended and easiest way to use Formsnap, they aren't the only way. If you prefer to bring your own components or use native HTML elements, that's fine too. While the developer experience won't be "),n=B("em"),n.textContent=l,t=d(" as nice, it's still pretty good for what you get.")},l(e){a=D(e,"Although the provided components are the recommended and easiest way to use Formsnap, they aren't the only way. If you prefer to bring your own components or use native HTML elements, that's fine too. While the developer experience won't be "),n=F(e,"EM",{"data-svelte-h":!0}),h(n)!=="svelte-1opzn70"&&(n.textContent=l),t=D(e," as nice, it's still pretty good for what you get.")},m(e,u){o(e,a,u),o(e,n,u),o(e,t,u)},p:P,d(e){e&&(p(a),p(n),p(t))}}}function sn(c){let a,n,l="<Form.Root />",t,e,u="<Form.Field />",m;return{c(){a=d("We'll start by looking at the slot props exposed by the "),n=B("code"),n.textContent=l,t=d(" and "),e=B("code"),e.textContent=u,m=d(", and then how to use native HTML elements, followed by how to use your own components/mix and match with the provided components.")},l(y){a=D(y,"We'll start by looking at the slot props exposed by the "),n=F(y,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-1m1ah8c"&&(n.textContent=l),t=D(y," and "),e=F(y,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-rgbtxo"&&(e.textContent=u),m=D(y,", and then how to use native HTML elements, followed by how to use your own components/mix and match with the provided components.")},m(y,$){o(y,a,$),o(y,n,$),o(y,t,$),o(y,e,$),o(y,m,$)},p:P,d(y){y&&(p(a),p(n),p(t),p(e),p(m))}}}function an(c){let a;return{c(){a=d("Slot Props")},l(n){a=D(n,"Slot Props")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function nn(c){let a,n,l="<Form.Root />",t,e,u="<Form.Field />",m;return{c(){a=d("To use Formsnap without the provided components, you'll need to use some of the slot props exposed by the "),n=B("code"),n.textContent=l,t=d(" and "),e=B("code"),e.textContent=u,m=d(" components. Which ones you use will depend on your use case and needs, but here's a list of them along with what they're used for.")},l(y){a=D(y,"To use Formsnap without the provided components, you'll need to use some of the slot props exposed by the "),n=F(y,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-1m1ah8c"&&(n.textContent=l),t=D(y," and "),e=F(y,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-rgbtxo"&&(e.textContent=u),m=D(y," components. Which ones you use will depend on your use case and needs, but here's a list of them along with what they're used for.")},m(y,$){o(y,a,$),o(y,n,$),o(y,t,$),o(y,e,$),o(y,m,$)},p:P,d(y){y&&(p(a),p(n),p(t),p(e),p(m))}}}function en(c){let a;return{c(){a=d("This information will eventually be documented in a nice API reference section, but for now, this will do.")},l(n){a=D(n,"This information will eventually be documented in a nice API reference section, but for now, this will do.")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function tn(c){let a;return{c(){a=d("Form.Root")},l(n){a=D(n,"Form.Root")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function ln(c){let a,n=`<code data-language="ts" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #A6AAAD">// Not a real type, just for visual reference :)</span></span>
<span data-line=""><span style="color: #BB9AF7">type</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">FormRootSlotProps</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">=</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * The &#96;config&#96; slot prop is used to properly type and wire up the form fields.</span></span>
<span data-line=""><span style="color: #A6AAAD">   * You won't need to use this prop directly, but it's important that it's passed</span></span>
<span data-line=""><span style="color: #A6AAAD">   * to the &#96;&#x3C;Form.Field />&#96; components so that they are properly typed and functional.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">config</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The &#96;form&#96; slot prop is the form's store. It contains the form's current</span></span>
<span data-line=""><span style="color: #A6AAAD">     * values, validation errors, and other useful properties.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">form</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">FormStore</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The &#96;schema&#96; slot prop is the form's schema. It contains the form's</span></span>
<span data-line=""><span style="color: #A6AAAD">     * validation rules, default values, and other useful properties.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">schema</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">FormSchema</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * The &#96;enhance&#96; slot prop is an action that progressively enhances the form.</span></span>
<span data-line=""><span style="color: #A6AAAD">   * It's important to note that this is **_*NOT*_** the &#96;enhance&#96; action provided</span></span>
<span data-line=""><span style="color: #A6AAAD">   * by SvelteKit, but rather a custom action provided by Superforms.</span></span>
<span data-line=""><span style="color: #A6AAAD">   *</span></span>
<span data-line=""><span style="color: #A6AAAD">   * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;form use:enhance /></span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">enhance</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">Element</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function pn(c){let a,n=`<code data-language="ts" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #9699A3; font-style: italic">// Not a real type, just for visual reference :)</span></span>
<span data-line=""><span style="color: #5A4A78">type</span><span style="color: #343B59"> </span><span style="color: #343B58">FormRootSlotProps</span><span style="color: #343B59"> </span><span style="color: #4C505E">=</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * The &#96;config&#96; slot prop is used to properly type and wire up the form fields.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * You won't need to use this prop directly, but it's important that it's passed</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * to the &#96;&#x3C;Form.Field />&#96; components so that they are properly typed and functional.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">config</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The &#96;form&#96; slot prop is the form's store. It contains the form's current</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * values, validation errors, and other useful properties.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">form</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">FormStore</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The &#96;schema&#96; slot prop is the form's schema. It contains the form's</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * validation rules, default values, and other useful properties.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">schema</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">FormSchema</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * The &#96;enhance&#96; slot prop is an action that progressively enhances the form.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * It's important to note that this is **_*NOT*_** the &#96;enhance&#96; action provided</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * by SvelteKit, but rather a custom action provided by Superforms.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   *</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;form use:enhance /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">enhance</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">Element</span><span style="color: #4C505E">>;</span></span>
<span data-line=""><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function on(c){let a;return{c(){a=d("Form.Field")},l(n){a=D(n,"Form.Field")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function rn(c){let a,n=`<code data-language="ts" data-theme="dark" style="display: grid;"><span data-line=""><span style="color: #A6AAAD">// Not a real type, just for visual reference :)</span></span>
<span data-line=""><span style="color: #BB9AF7">type</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">FormFieldSlotProps</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">T</span><span style="color: #89DDFF">></span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">=</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * Actions provide functionality to the various elements that</span></span>
<span data-line=""><span style="color: #A6AAAD">   * make up the field. They handle event listeners, attributes, etc.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">actions</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to type="checkbox" input elements.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles the &#96;checked&#96; attribute and the &#96;value&#96; store using a "change"</span></span>
<span data-line=""><span style="color: #A6AAAD">     * event listener &#x26; applies all the necessary attributes.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">checkbox</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLInputElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to the field's description element.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Applies the &#96;id&#96; attribute which is used to associate the description</span></span>
<span data-line=""><span style="color: #A6AAAD">     * with the input element using the &#96;aria-describedby&#96; attribute.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">description</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to a regular input element.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles updating the &#96;value&#96; store using an &#96;input&#96; event listener</span></span>
<span data-line=""><span style="color: #A6AAAD">     * and applies the necessary attributes.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">input</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLInputElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to the field's label element.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Applies the &#96;for&#96; attribute which is used to associate the label</span></span>
<span data-line=""><span style="color: #A6AAAD">     * with the field's input element.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">label</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLLabelElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to type="radio" input elements.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles the &#96;checked&#96; attribute and the &#96;value&#96; store using a "change"</span></span>
<span data-line=""><span style="color: #A6AAAD">     * event listener &#x26; applies all the necessary attributes.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">radio</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLInputElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to select elements.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles the the &#96;value&#96; store using a "change" event listener and</span></span>
<span data-line=""><span style="color: #A6AAAD">     * applies all necessary attributes.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">select</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLSelectElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to textarea elements.</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles the the &#96;value&#96; store using an "input" event listener and</span></span>
<span data-line=""><span style="color: #A6AAAD">     * applies all necessary attributes.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">textarea</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLTextAreaElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * The action which should be applied to the field's validation message</span></span>
<span data-line=""><span style="color: #A6AAAD">     * element. Applies the &#96;id&#96; attribute which is used to associate the</span></span>
<span data-line=""><span style="color: #A6AAAD">     * validation message with the input using the &#96;aria-describedby&#96; attribute.</span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">validation</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Action</span><span style="color: #89DDFF">&#x3C;</span><span style="color: #C0CAF5">HTMLElement</span><span style="color: #89DDFF">>;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * &#96;attrs&#96; is an object containing the attributes for the various elements</span></span>
<span data-line=""><span style="color: #A6AAAD">   * that make up the field. These aren't necessary if you're using the actions,</span></span>
<span data-line=""><span style="color: #A6AAAD">   * but they can be useful if you're using custom components.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">attrs</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">input</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">aria-invalid</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">true</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">aria-describedby</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">aria-required</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">true</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">data-invalid</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">true</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">data-valid</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">true</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">name</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">id</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">value</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">T</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">label</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">for</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">description</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">id</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #73DACA">validation</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #73DACA">id</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * &#96;handlers&#96; is an object containing helpful event handler functions which</span></span>
<span data-line=""><span style="color: #A6AAAD">   * can be used to update the field's value store as the user interacts with</span></span>
<span data-line=""><span style="color: #A6AAAD">   * the field. These aren't necessary if you're using actions, but are useful</span></span>
<span data-line=""><span style="color: #A6AAAD">   * when working with custom components.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">handlers</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles updating the field's &#96;value&#96; store on "input" events</span></span>
<span data-line=""><span style="color: #A6AAAD">     *</span></span>
<span data-line=""><span style="color: #A6AAAD">     * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;CustomInput on:input=&#123;handlers.input&#125; /></span></span>
<span data-line=""><span style="color: #A6AAAD">     * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;CustomTextarea on:input=&#123;handlers.input&#125; /></span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #7AA2F7">input</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">(</span><span style="color: #E0AF68">event</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Event</span><span style="color: #9ABDF5">)</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">=></span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">void</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #A6AAAD">     *</span></span>
<span data-line=""><span style="color: #A6AAAD">     * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;CustomCheckbox on:change=&#123;handlers.checkbox&#125; /></span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #7AA2F7">checkbox</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">(</span><span style="color: #E0AF68">event</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Event</span><span style="color: #9ABDF5">)</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">=></span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">void</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #A6AAAD">     *</span></span>
<span data-line=""><span style="color: #A6AAAD">     * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;CustomRadioItem on:change=&#123;handlers.radio&#125; /></span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #7AA2F7">radio</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">(</span><span style="color: #E0AF68">event</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Event</span><span style="color: #9ABDF5">)</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">=></span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">void</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #A6AAAD">     *</span></span>
<span data-line=""><span style="color: #A6AAAD">     * </span><span style="color: #7582BA">@example</span><span style="color: #A6AAAD"> &#x3C;CustomSelect on:change=&#123;handlers.select&#125; /></span></span>
<span data-line=""><span style="color: #A6AAAD">     */</span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #7AA2F7">select</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">(</span><span style="color: #E0AF68">event</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">Event</span><span style="color: #9ABDF5">)</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">=></span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">void</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * A function which sets the field's &#96;value&#96; store to the value provided via</span></span>
<span data-line=""><span style="color: #A6AAAD">   * the function argument. This is useful when working with custom components.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #7AA2F7">setValue</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #9ABDF5">(</span><span style="color: #E0AF68">value</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">T</span><span style="color: #9ABDF5">)</span><span style="color: #A9B1D6"> </span><span style="color: #BB9AF7">=></span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">void</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * The field's validation errors.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">errors</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">string</span><span style="color: #9ABDF5">[]</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">|</span><span style="color: #A9B1D6"> </span><span style="color: #52BACD">undefined</span><span style="color: #89DDFF">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #A6AAAD">/**</span></span>
<span data-line=""><span style="color: #A6AAAD">   * The field's current value.</span></span>
<span data-line=""><span style="color: #A6AAAD">   */</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #73DACA">value</span><span style="color: #89DDFF">:</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">T</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #9ABDF5">&#125;</span><span style="color: #89DDFF">;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function cn(c){let a,n=`<code data-language="ts" data-theme="light" style="display: grid;"><span data-line=""><span style="color: #9699A3; font-style: italic">// Not a real type, just for visual reference :)</span></span>
<span data-line=""><span style="color: #5A4A78">type</span><span style="color: #343B59"> </span><span style="color: #343B58">FormFieldSlotProps</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">T</span><span style="color: #4C505E">></span><span style="color: #343B59"> </span><span style="color: #4C505E">=</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * Actions provide functionality to the various elements that</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * make up the field. They handle event listeners, attributes, etc.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">actions</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to type="checkbox" input elements.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles the &#96;checked&#96; attribute and the &#96;value&#96; store using a "change"</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * event listener &#x26; applies all the necessary attributes.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">checkbox</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLInputElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to the field's description element.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Applies the &#96;id&#96; attribute which is used to associate the description</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * with the input element using the &#96;aria-describedby&#96; attribute.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">description</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to a regular input element.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles updating the &#96;value&#96; store using an &#96;input&#96; event listener</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * and applies the necessary attributes.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">input</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLInputElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to the field's label element.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Applies the &#96;for&#96; attribute which is used to associate the label</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * with the field's input element.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">label</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLLabelElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to type="radio" input elements.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles the &#96;checked&#96; attribute and the &#96;value&#96; store using a "change"</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * event listener &#x26; applies all the necessary attributes.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">radio</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLInputElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to select elements.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles the the &#96;value&#96; store using a "change" event listener and</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * applies all necessary attributes.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">select</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLSelectElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to textarea elements.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles the the &#96;value&#96; store using an "input" event listener and</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * applies all necessary attributes.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">textarea</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLTextAreaElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * The action which should be applied to the field's validation message</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * element. Applies the &#96;id&#96; attribute which is used to associate the</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * validation message with the input using the &#96;aria-describedby&#96; attribute.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">validation</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Action</span><span style="color: #4C505E">&#x3C;</span><span style="color: #343B58">HTMLElement</span><span style="color: #4C505E">>;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * &#96;attrs&#96; is an object containing the attributes for the various elements</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * that make up the field. These aren't necessary if you're using the actions,</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * but they can be useful if you're using custom components.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">attrs</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">input</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #4C505E">"</span><span style="color: #485E30">aria-invalid</span><span style="color: #4C505E">"</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">true</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #4C505E">"</span><span style="color: #485E30">aria-describedby</span><span style="color: #4C505E">"</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #4C505E">"</span><span style="color: #485E30">aria-required</span><span style="color: #4C505E">"</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">true</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #4C505E">"</span><span style="color: #485E30">data-invalid</span><span style="color: #4C505E">"</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">true</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #4C505E">"</span><span style="color: #485E30">data-valid</span><span style="color: #4C505E">"</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">true</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">name</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">id</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">value</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">T</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">label</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">for</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">description</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">id</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #33635C">validation</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #33635C">id</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * &#96;handlers&#96; is an object containing helpful event handler functions which</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * can be used to update the field's value store as the user interacts with</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * the field. These aren't necessary if you're using actions, but are useful</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * when working with custom components.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">handlers</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles updating the field's &#96;value&#96; store on "input" events</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     *</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;CustomInput on:input=&#123;handlers.input&#125; /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;CustomTextarea on:input=&#123;handlers.input&#125; /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #34548A">input</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">(</span><span style="color: #8F5E15">event</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Event</span><span style="color: #484C61">)</span><span style="color: #343B59"> </span><span style="color: #5A4A78">=></span><span style="color: #343B59"> </span><span style="color: #166775">void</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     *</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;CustomCheckbox on:change=&#123;handlers.checkbox&#125; /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #34548A">checkbox</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">(</span><span style="color: #8F5E15">event</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Event</span><span style="color: #484C61">)</span><span style="color: #343B59"> </span><span style="color: #5A4A78">=></span><span style="color: #343B59"> </span><span style="color: #166775">void</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     *</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;CustomRadioItem on:change=&#123;handlers.radio&#125; /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #34548A">radio</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">(</span><span style="color: #8F5E15">event</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Event</span><span style="color: #484C61">)</span><span style="color: #343B59"> </span><span style="color: #5A4A78">=></span><span style="color: #343B59"> </span><span style="color: #166775">void</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * Handles updating the field's &#96;value&#96; store on "change" events</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     *</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     * </span><span style="color: #73767D; font-style: italic">@example</span><span style="color: #9699A3; font-style: italic"> &#x3C;CustomSelect on:change=&#123;handlers.select&#125; /></span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">     */</span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #34548A">select</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">(</span><span style="color: #8F5E15">event</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">Event</span><span style="color: #484C61">)</span><span style="color: #343B59"> </span><span style="color: #5A4A78">=></span><span style="color: #343B59"> </span><span style="color: #166775">void</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * A function which sets the field's &#96;value&#96; store to the value provided via</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * the function argument. This is useful when working with custom components.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #34548A">setValue</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #484C61">(</span><span style="color: #8F5E15">value</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">T</span><span style="color: #484C61">)</span><span style="color: #343B59"> </span><span style="color: #5A4A78">=></span><span style="color: #343B59"> </span><span style="color: #166775">void</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * The field's validation errors.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">errors</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #166775">string</span><span style="color: #484C61">[]</span><span style="color: #343B59"> </span><span style="color: #4C505E">|</span><span style="color: #343B59"> </span><span style="color: #166775">undefined</span><span style="color: #4C505E">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #9699A3; font-style: italic">/**</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   * The field's current value.</span></span>
<span data-line=""><span style="color: #9699A3; font-style: italic">   */</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #33635C">value</span><span style="color: #4C505E">:</span><span style="color: #343B59"> </span><span style="color: #343B58">T</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #484C61">&#125;</span><span style="color: #4C505E">;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function yn(c){let a;return{c(){a=d("Native HTML elements")},l(n){a=D(n,"Native HTML elements")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function An(c){let a;return{c(){a=d("Using the native form element")},l(n){a=D(n,"Using the native form element")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function dn(c){let a,n="<Form.Root />",l,t,e="<form>",u,m,y="asChild",$,v,i="true",H,O,f="<form />",I;return{c(){a=B("code"),a.textContent=n,l=d(" as the name suggests is the root element of the form. By default, it renders a "),t=B("code"),t.textContent=e,u=d(" element, but you can override that behavior by setting the "),m=B("code"),m.textContent=y,$=d(" prop to "),v=B("code"),v.textContent=i,H=d(". This will prevent the "),O=B("code"),O.textContent=f,I=d(" from being rendered, and instead only render its children.")},l(E){a=F(E,"CODE",{"data-svelte-h":!0}),h(a)!=="svelte-1m1ah8c"&&(a.textContent=n),l=D(E," as the name suggests is the root element of the form. By default, it renders a "),t=F(E,"CODE",{"data-svelte-h":!0}),h(t)!=="svelte-1addioz"&&(t.textContent=e),u=D(E," element, but you can override that behavior by setting the "),m=F(E,"CODE",{"data-svelte-h":!0}),h(m)!=="svelte-oeous"&&(m.textContent=y),$=D(E," prop to "),v=F(E,"CODE",{"data-svelte-h":!0}),h(v)!=="svelte-1b4w2dk"&&(v.textContent=i),H=D(E,". This will prevent the "),O=F(E,"CODE",{"data-svelte-h":!0}),h(O)!=="svelte-8ooak6"&&(O.textContent=f),I=D(E," from being rendered, and instead only render its children.")},m(E,C){o(E,a,C),o(E,l,C),o(E,t,C),o(E,u,C),o(E,m,C),o(E,$,C),o(E,v,C),o(E,H,C),o(E,O,C),o(E,I,C)},p:P,d(E){E&&(p(a),p(l),p(t),p(u),p(m),p($),p(v),p(H),p(O),p(I))}}}function Dn(c){let a,n,l="asChild",t;return{c(){a=d("Of course, there's a lot more going on, but here's a high-level example of what the "),n=B("code"),n.textContent=l,t=d(" prop is doing.")},l(e){a=D(e,"Of course, there's a lot more going on, but here's a high-level example of what the "),n=F(e,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-oeous"&&(n.textContent=l),t=D(e," prop is doing.")},m(e,u){o(e,a,u),o(e,n,u),o(e,t,u)},p:P,d(e){e&&(p(a),p(n),p(t))}}}function Cn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="dark" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">#</span><span style="color: #BB9AF7">if</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">asChild</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #BB9AF7">slot</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">:</span><span style="color: #BB9AF7">else</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">form</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #BB9AF7">slot</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">form</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">/</span><span style="color: #BB9AF7">if</span><span style="color: #9ABDF5">&#125;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function un(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="light" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #484C61">&#123;</span><span style="color: #4C505E">#</span><span style="color: #5A4A78">if</span><span style="color: #343B59"> </span><span style="color: #343B58">asChild</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;</span><span style="color: #5A4A78">slot</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""><span style="color: #484C61">&#123;</span><span style="color: #4C505E">:</span><span style="color: #5A4A78">else</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">form</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #B05467">&#x3C;</span><span style="color: #5A4A78">slot</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">form</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #484C61">&#123;</span><span style="color: #4C505E">/</span><span style="color: #5A4A78">if</span><span style="color: #484C61">&#125;</span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function mn(c){let a,n,l="<form />",t,e,u="<Form.Root />",m,y,$="schema",v,i,H="form",O,f,I="<Form.Root />",E;return{c(){a=d("Even though we're intentionally opting our of the provided "),n=B("code"),n.textContent=l,t=d(" element, we still want the same functionality. To achieve this, we can use the slot props provided by "),e=B("code"),e.textContent=u,m=d(" to wire up our form. Keep in mind you'll still need to pass the "),y=B("code"),y.textContent=$,v=d(" & "),i=B("code"),i.textContent=H,O=d(" props to "),f=B("code"),f.textContent=I,E=d(" for validation and state management to work.")},l(C){a=D(C,"Even though we're intentionally opting our of the provided "),n=F(C,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-8ooak6"&&(n.textContent=l),t=D(C," element, we still want the same functionality. To achieve this, we can use the slot props provided by "),e=F(C,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-1m1ah8c"&&(e.textContent=u),m=D(C," to wire up our form. Keep in mind you'll still need to pass the "),y=F(C,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-q0iv5r"&&(y.textContent=$),v=D(C," & "),i=F(C,"CODE",{"data-svelte-h":!0}),h(i)!=="svelte-24wwdm"&&(i.textContent=H),O=D(C," props to "),f=F(C,"CODE",{"data-svelte-h":!0}),h(f)!=="svelte-1m1ah8c"&&(f.textContent=I),E=D(C," for validation and state management to work.")},m(C,R){o(C,a,R),o(C,n,R),o(C,t,R),o(C,e,R),o(C,m,R),o(C,y,R),o(C,v,R),o(C,i,R),o(C,O,R),o(C,f,R),o(C,E,R)},p:P,d(C){C&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v),p(i),p(O),p(f),p(E))}}}function fn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="dark" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">form</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">schema</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">someSchema</span><span style="color: #7DCFFF">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">config</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">enhance</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">asChild</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">form</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">method</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">POST</span><span style="color: #89DDFF">"</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">enhance</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #A6AAAD">&#x3C;!--  --></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">form</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #BA3C97">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function Bn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="light" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #69323D"> </span><span style="color: #5A4A78">form</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">schema</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">someSchema</span><span style="color: #0F4B6E">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">config</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">enhance</span><span style="color: #69323D"> </span><span style="color: #5A4A78">asChild</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">form</span><span style="color: #69323D"> </span><span style="color: #5A4A78">method</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">POST</span><span style="color: #4C505E">"</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">enhance</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #9699A3; font-style: italic">&#x3C;!--  --></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">form</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #B05467">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function Fn(c){let a;return{c(){a=d("Superforms")},l(n){a=D(n,"Superforms")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function hn(c){let a,n,l="config",t,e,u="<Form.Field />",m,y,$="enhance",v,i,H="<em><em>NOT</em></em>",O,f,I="enhance",E,C,R,N;return C=new Xa({props:{href:"https://superforms.rocks/concepts/enhance",rel:"nofollow",$$slots:{default:[Fn]},$$scope:{ctx:c}}}),{c(){a=d("Per usual, we'll need the "),n=B("code"),n.textContent=l,t=d(" slot prop to properly wire up our "),e=B("code"),e.textContent=u,m=d(" components, but we'll also need the "),y=B("code"),y.textContent=$,v=d(" slot prop, which is an action that progressively enhances the form. It's important to note that this is "),i=B("strong"),i.innerHTML=H,O=d(" the "),f=B("code"),f.textContent=I,E=d(" action provided by SvelteKit, but rather a custom action provided by "),_(C.$$.fragment),R=d(".")},l(A){a=D(A,"Per usual, we'll need the "),n=F(A,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-1ubq5kq"&&(n.textContent=l),t=D(A," slot prop to properly wire up our "),e=F(A,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-rgbtxo"&&(e.textContent=u),m=D(A," components, but we'll also need the "),y=F(A,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-136ko3g"&&(y.textContent=$),v=D(A," slot prop, which is an action that progressively enhances the form. It's important to note that this is "),i=F(A,"STRONG",{"data-svelte-h":!0}),h(i)!=="svelte-1sq9gr7"&&(i.innerHTML=H),O=D(A," the "),f=F(A,"CODE",{"data-svelte-h":!0}),h(f)!=="svelte-136ko3g"&&(f.textContent=I),E=D(A," action provided by SvelteKit, but rather a custom action provided by "),g(C.$$.fragment,A),R=D(A,".")},m(A,k){o(A,a,k),o(A,n,k),o(A,t,k),o(A,e,k),o(A,m,k),o(A,y,k),o(A,v,k),o(A,i,k),o(A,O,k),o(A,f,k),o(A,E,k),x(C,A,k),o(A,R,k),N=!0},p(A,k){const Ts={};k&2&&(Ts.$$scope={dirty:k,ctx:A}),C.$set(Ts)},i(A){N||(w(C.$$.fragment,A),N=!0)},o(A){b(C.$$.fragment,A),N=!1},d(A){A&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v),p(i),p(O),p(f),p(E),p(R)),T(C,A)}}}function $n(c){let a,n,l="<form />",t;return{c(){a=d("That's it. Now you can use your own "),n=B("code"),n.textContent=l,t=d(" element and still get all the benefits!")},l(e){a=D(e,"That's it. Now you can use your own "),n=F(e,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-8ooak6"&&(n.textContent=l),t=D(e," element and still get all the benefits!")},m(e,u){o(e,a,u),o(e,n,u),o(e,t,u)},p:P,d(e){e&&(p(a),p(n),p(t))}}}function En(c){let a;return{c(){a=d("Using native field elements")},l(n){a=D(n,"Using native field elements")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function vn(c){let a,n,l="<Form.Field />",t,e,u="actions",m,y,$="<Form.Field />",v,i,H="asChild",O;return{c(){a=d("The "),n=B("code"),n.textContent=l,t=d(" component exposes an "),e=B("code"),e.textContent=u,m=d(" slot prop which allows you to use native elements without losing any functionality. The "),y=B("code"),y.textContent=$,v=d(" component doesn't render any markup by default, so there's no need to worry about the "),i=B("code"),i.textContent=H,O=d(" prop here.")},l(f){a=D(f,"The "),n=F(f,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-rgbtxo"&&(n.textContent=l),t=D(f," component exposes an "),e=F(f,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-arhhaj"&&(e.textContent=u),m=D(f," slot prop which allows you to use native elements without losing any functionality. The "),y=F(f,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-rgbtxo"&&(y.textContent=$),v=D(f," component doesn't render any markup by default, so there's no need to worry about the "),i=F(f,"CODE",{"data-svelte-h":!0}),h(i)!=="svelte-oeous"&&(i.textContent=H),O=D(f," prop here.")},m(f,I){o(f,a,I),o(f,n,I),o(f,t,I),o(f,e,I),o(f,m,I),o(f,y,I),o(f,v,I),o(f,i,I),o(f,O,I)},p:P,d(f){f&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v),p(i),p(O))}}}function _n(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="dark" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">form</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">schema</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">someSchema</span><span style="color: #7DCFFF">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">config</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">enhance</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">asChild</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">form</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">method</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">POST</span><span style="color: #89DDFF">"</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">enhance</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Field</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #C0CAF5">config</span><span style="color: #BB9AF7">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">actions</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">email</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #A6AAAD">&#x3C;!-- svelte-ignore a11y-label-has-associated-control / applied by action --></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">label</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">actions</span><span style="color: #DE5971">.</span><span style="color: #BB9AF7">label</span><span style="color: #BA3C97">></span><span style="color: #A9B1D6"> Email </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">label</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">input</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">actions</span><span style="color: #DE5971">.</span><span style="color: #BB9AF7">input</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">span</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">actions</span><span style="color: #DE5971">.</span><span style="color: #BB9AF7">description</span><span style="color: #BA3C97">></span><span style="color: #A9B1D6"> Please use your company email. </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">span</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">span</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">actions</span><span style="color: #DE5971">.</span><span style="color: #BB9AF7">validation</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">        </span><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">#</span><span style="color: #BB9AF7">if</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">$</span><span style="color: #C0CAF5">errors</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">          </span><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">#</span><span style="color: #BB9AF7">each</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">$</span><span style="color: #C0CAF5">errors</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">email</span><span style="color: #A9B1D6"> </span><span style="color: #89DDFF">as</span><span style="color: #A9B1D6"> </span><span style="color: #C0CAF5">error</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">            </span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">error</span><span style="color: #7DCFFF">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">          </span><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">/</span><span style="color: #BB9AF7">each</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">        </span><span style="color: #9ABDF5">&#123;</span><span style="color: #89DDFF">/</span><span style="color: #BB9AF7">if</span><span style="color: #9ABDF5">&#125;</span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">span</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Field</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">form</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #BA3C97">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function gn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="light" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #69323D"> </span><span style="color: #5A4A78">form</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">schema</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">someSchema</span><span style="color: #0F4B6E">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">config</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">enhance</span><span style="color: #69323D"> </span><span style="color: #5A4A78">asChild</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">form</span><span style="color: #69323D"> </span><span style="color: #5A4A78">method</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">POST</span><span style="color: #4C505E">"</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">enhance</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Field</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #343B58">config</span><span style="color: #5A4A78">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">actions</span><span style="color: #69323D"> </span><span style="color: #5A4A78">name</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">email</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #9699A3; font-style: italic">&#x3C;!-- svelte-ignore a11y-label-has-associated-control / applied by action --></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">label</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">actions</span><span style="color: #69323D">.</span><span style="color: #5A4A78">label</span><span style="color: #B05467">></span><span style="color: #343B59"> Email </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">label</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">input</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">actions</span><span style="color: #69323D">.</span><span style="color: #5A4A78">input</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">span</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">actions</span><span style="color: #69323D">.</span><span style="color: #5A4A78">description</span><span style="color: #B05467">></span><span style="color: #343B59"> Please use your company email. </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">span</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">span</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">actions</span><span style="color: #69323D">.</span><span style="color: #5A4A78">validation</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">        </span><span style="color: #484C61">&#123;</span><span style="color: #4C505E">#</span><span style="color: #5A4A78">if</span><span style="color: #343B59"> </span><span style="color: #4C505E">$</span><span style="color: #343B58">errors</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">          </span><span style="color: #484C61">&#123;</span><span style="color: #4C505E">#</span><span style="color: #5A4A78">each</span><span style="color: #343B59"> </span><span style="color: #4C505E">$</span><span style="color: #343B58">errors</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">email</span><span style="color: #343B59"> </span><span style="color: #4C505E">as</span><span style="color: #343B59"> </span><span style="color: #343B58">error</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">            </span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">error</span><span style="color: #0F4B6E">&#125;</span></span>
<span data-line=""><span style="color: #343B59">          </span><span style="color: #484C61">&#123;</span><span style="color: #4C505E">/</span><span style="color: #5A4A78">each</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">        </span><span style="color: #484C61">&#123;</span><span style="color: #4C505E">/</span><span style="color: #5A4A78">if</span><span style="color: #484C61">&#125;</span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">span</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Field</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">form</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #B05467">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function xn(c){let a;return{c(){a=d("As you can see all we need to make this functional is to apply the appropriate actions to the various elements that make up the field. Not quite as pretty as the provided components, but it gets the job done while giving you the flexibility of scoped styles, additional actions, etc.")},l(n){a=D(n,"As you can see all we need to make this functional is to apply the appropriate actions to the various elements that make up the field. Not quite as pretty as the provided components, but it gets the job done while giving you the flexibility of scoped styles, additional actions, etc.")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function wn(c){let a;return{c(){a=d("Custom components")},l(n){a=D(n,"Custom components")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function bn(c){let a;return{c(){a=d("While there's no way to predict what the interfaces of your components will look like, we can still provide a high-level example of how to use them with Formsnap.")},l(n){a=D(n,"While there's no way to predict what the interfaces of your components will look like, we can still provide a high-level example of how to use them with Formsnap.")},m(n,l){o(n,a,l)},d(n){n&&p(a)}}}function Tn(c){let a,n,l="<CustomInput />",t;return{c(){a=d("For purposes of this example, we'll assume that we have a "),n=B("code"),n.textContent=l,t=d(" component that looks something like this:")},l(e){a=D(e,"For purposes of this example, we'll assume that we have a "),n=F(e,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-wfsfxb"&&(n.textContent=l),t=D(e," component that looks something like this:")},m(e,u){o(e,a,u),o(e,n,u),o(e,t,u)},p:P,d(e){e&&(p(a),p(n),p(t))}}}function kn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="dark" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">script</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">ts</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #7DCFFF">import</span><span style="color: #C0CAF5"> </span><span style="color: #BB9AF7">type</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123; </span><span style="color: #52BACD">HTMLInputAttributes</span><span style="color: #9ABDF5"> &#125;</span><span style="color: #C0CAF5"> </span><span style="color: #7DCFFF">from</span><span style="color: #C0CAF5"> </span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">svelte/elements</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #BB9AF7">type</span><span style="color: #C0CAF5"> $$Props </span><span style="color: #89DDFF">=</span><span style="color: #C0CAF5"> HTMLInputAttributes</span><span style="color: #89DDFF">;</span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">script</span><span style="color: #BA3C97">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">input</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">custom-input</span><span style="color: #89DDFF">"</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">on</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5">input</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #F7768E; font-weight: bold">...</span><span style="color: #C0CAF5">$$restProps</span><span style="color: #BB9AF7">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">style</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #C0CAF5">  </span><span style="color: #E0AF68">.</span><span style="color: #9ECE6A">custom-input</span><span style="color: #C0CAF5"> </span><span style="color: #9ABDF5">&#123;</span></span>
<span data-line=""><span style="color: #9ABDF5">    </span><span style="color: #A6AAAD">/* ... */</span></span>
<span data-line=""><span style="color: #9ABDF5">  &#125;</span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">style</span><span style="color: #BA3C97">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function Hn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="light" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">script</span><span style="color: #69323D"> </span><span style="color: #5A4A78">lang</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">ts</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #0F4B6E">import</span><span style="color: #343B58"> </span><span style="color: #5A4A78">type</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123; </span><span style="color: #166775">HTMLInputAttributes</span><span style="color: #484C61"> &#125;</span><span style="color: #343B58"> </span><span style="color: #0F4B6E">from</span><span style="color: #343B58"> </span><span style="color: #4C505E">"</span><span style="color: #485E30">svelte/elements</span><span style="color: #4C505E">"</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #5A4A78">type</span><span style="color: #343B58"> $$Props </span><span style="color: #4C505E">=</span><span style="color: #343B58"> HTMLInputAttributes</span><span style="color: #4C505E">;</span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">script</span><span style="color: #B05467">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">input</span><span style="color: #69323D"> </span><span style="color: #5A4A78">class</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">custom-input</span><span style="color: #4C505E">"</span><span style="color: #69323D"> </span><span style="color: #5A4A78">on</span><span style="color: #4C505E">:</span><span style="color: #343B58">input</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #8C4351; font-weight: bold">...</span><span style="color: #343B58">$$restProps</span><span style="color: #5A4A78">&#125;</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">style</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B58">  </span><span style="color: #8F5E15">.</span><span style="color: #485E30">custom-input</span><span style="color: #343B58"> </span><span style="color: #484C61">&#123;</span></span>
<span data-line=""><span style="color: #484C61">    </span><span style="color: #9699A3; font-style: italic">/* ... */</span></span>
<span data-line=""><span style="color: #484C61">  &#125;</span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">style</span><span style="color: #B05467">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function On(c){let a,n,l="on:input",t,e,u="$$restProps",m,y,$="<input />",v;return{c(){a=d("We're forwarding the "),n=B("code"),n.textContent=l,t=d(" event so that we handle the event in the parent component, and we're using the "),e=B("code"),e.textContent=u,m=d(" spreadable to forward any additional props to the "),y=B("code"),y.textContent=$,v=d(" element.")},l(i){a=D(i,"We're forwarding the "),n=F(i,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-8zhjvf"&&(n.textContent=l),t=D(i," event so that we handle the event in the parent component, and we're using the "),e=F(i,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-109cznm"&&(e.textContent=u),m=D(i," spreadable to forward any additional props to the "),y=F(i,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-sik5fs"&&(y.textContent=$),v=D(i," element.")},m(i,H){o(i,a,H),o(i,n,H),o(i,t,H),o(i,e,H),o(i,m,H),o(i,y,H),o(i,v,H)},p:P,d(i){i&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v))}}}function In(c){let a,n,l="<Form.Field />",t;return{c(){a=d("Now let's use the slot props provided by "),n=B("code"),n.textContent=l,t=d(" to wire up our custom input.")},l(e){a=D(e,"Now let's use the slot props provided by "),n=F(e,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-rgbtxo"&&(n.textContent=l),t=D(e," to wire up our custom input.")},m(e,u){o(e,a,u),o(e,n,u),o(e,t,u)},p:P,d(e){e&&(p(a),p(n),p(t))}}}function Ln(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="dark" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">form</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">data</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">form&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">schema</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">someSchema</span><span style="color: #7DCFFF">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">config</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">enhance</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #F7768E">form</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">method</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">POST</span><span style="color: #89DDFF">"</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">use</span><span style="color: #89DDFF">:</span><span style="color: #7AA2F7">enhance</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Field</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #C0CAF5">config</span><span style="color: #BB9AF7">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">attrs</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">let</span><span style="color: #89DDFF">:</span><span style="color: #E0AF68">handlers</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #9ECE6A">email</span><span style="color: #89DDFF">"</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Label</span><span style="color: #BA3C97">></span><span style="color: #A9B1D6">Email</span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Label</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">CustomInput</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">&#123;</span><span style="color: #F7768E; font-weight: bold">...</span><span style="color: #C0CAF5">attrs</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">input</span><span style="color: #BB9AF7">&#125;</span><span style="color: #DE5971"> </span><span style="color: #BB9AF7">on</span><span style="color: #89DDFF">:</span><span style="color: #C0CAF5">input</span><span style="color: #89DDFF">=</span><span style="color: #7DCFFF">&#123;</span><span style="color: #C0CAF5">handlers</span><span style="color: #89DDFF">.</span><span style="color: #7DCFFF">input&#125;</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Description</span><span style="color: #BA3C97">></span><span style="color: #A9B1D6">Please use your company email.</span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Description</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">      </span><span style="color: #BA3C97">&#x3C;</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Validation</span><span style="color: #DE5971"> </span><span style="color: #BA3C97">/></span></span>
<span data-line=""><span style="color: #A9B1D6">    </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Field</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #A9B1D6">  </span><span style="color: #BA3C97">&#x3C;/</span><span style="color: #F7768E">form</span><span style="color: #BA3C97">></span></span>
<span data-line=""><span style="color: #BA3C97">&#x3C;/</span><span style="color: #52BACD">Form</span><span style="color: #DE5971">.</span><span style="color: #52BACD">Root</span><span style="color: #BA3C97">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function Sn(c){let a,n=`<code data-line-numbers="" data-language="svelte" data-theme="light" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #69323D"> </span><span style="color: #5A4A78">form</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">data</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">form&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">schema</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">someSchema</span><span style="color: #0F4B6E">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">config</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">enhance</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;</span><span style="color: #8C4351">form</span><span style="color: #69323D"> </span><span style="color: #5A4A78">method</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">POST</span><span style="color: #4C505E">"</span><span style="color: #69323D"> </span><span style="color: #5A4A78">use</span><span style="color: #4C505E">:</span><span style="color: #34548A">enhance</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Field</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #343B58">config</span><span style="color: #5A4A78">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">attrs</span><span style="color: #69323D"> </span><span style="color: #5A4A78">let</span><span style="color: #4C505E">:</span><span style="color: #8F5E15">handlers</span><span style="color: #69323D"> </span><span style="color: #5A4A78">name</span><span style="color: #4C505E">=</span><span style="color: #4C505E">"</span><span style="color: #485E30">email</span><span style="color: #4C505E">"</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Label</span><span style="color: #B05467">></span><span style="color: #343B59">Email</span><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Label</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">CustomInput</span><span style="color: #69323D"> </span><span style="color: #5A4A78">&#123;</span><span style="color: #8C4351; font-weight: bold">...</span><span style="color: #343B58">attrs</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">input</span><span style="color: #5A4A78">&#125;</span><span style="color: #69323D"> </span><span style="color: #5A4A78">on</span><span style="color: #4C505E">:</span><span style="color: #343B58">input</span><span style="color: #4C505E">=</span><span style="color: #0F4B6E">&#123;</span><span style="color: #343B58">handlers</span><span style="color: #4C505E">.</span><span style="color: #0F4B6E">input&#125;</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Description</span><span style="color: #B05467">></span><span style="color: #343B59">Please use your company email.</span><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Description</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">      </span><span style="color: #B05467">&#x3C;</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Validation</span><span style="color: #69323D"> </span><span style="color: #B05467">/></span></span>
<span data-line=""><span style="color: #343B59">    </span><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Field</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #343B59">  </span><span style="color: #B05467">&#x3C;/</span><span style="color: #8C4351">form</span><span style="color: #B05467">></span></span>
<span data-line=""><span style="color: #B05467">&#x3C;/</span><span style="color: #166775">Form</span><span style="color: #69323D">.</span><span style="color: #166775">Root</span><span style="color: #B05467">></span></span></code>`,l;return{c(){a=new q(!1),l=M(),this.h()},l(t){a=z(t,!1),l=M(),this.h()},h(){a.a=l},m(t,e){a.m(n,t,e),o(t,l,e)},p:P,d(t){t&&(p(l),a.d())}}}function Mn(c){let a,n,l="attrs",t,e,u="handlers",m,y,$="value",v;return{c(){a=d("We're using the "),n=B("code"),n.textContent=l,t=d(" slot prop to apply the necessary attributes to our custom input, and we're using the "),e=B("code"),e.textContent=u,m=d(" slot prop to update the field's "),y=B("code"),y.textContent=$,v=d(" store as the user interacts with the input.")},l(i){a=D(i,"We're using the "),n=F(i,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-19z6bw2"&&(n.textContent=l),t=D(i," slot prop to apply the necessary attributes to our custom input, and we're using the "),e=F(i,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-11uovj5"&&(e.textContent=u),m=D(i," slot prop to update the field's "),y=F(i,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-18vs4ol"&&(y.textContent=$),v=D(i," store as the user interacts with the input.")},m(i,H){o(i,a,H),o(i,n,H),o(i,t,H),o(i,e,H),o(i,m,H),o(i,y,H),o(i,v,H)},p:P,d(i){i&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v))}}}function Pn(c){let a,n,l="<Form.Label />",t,e,u="<Form.Description />",m,y,$="<Form.Validation />",v,i,H="{...attrs.label}",O,f,I="{...attrs.description}",E,C,R="{...attrs.validation}",N;return{c(){a=d("Of course we could also bring our own "),n=B("code"),n.textContent=l,t=d(", "),e=B("code"),e.textContent=u,m=d(", and "),y=B("code"),y.textContent=$,v=d(" components, and the process would be the same, except they would receive "),i=B("code"),i.textContent=H,O=d(", "),f=B("code"),f.textContent=I,E=d(", and "),C=B("code"),C.textContent=R,N=d(" respectively.")},l(A){a=D(A,"Of course we could also bring our own "),n=F(A,"CODE",{"data-svelte-h":!0}),h(n)!=="svelte-oy6e06"&&(n.textContent=l),t=D(A,", "),e=F(A,"CODE",{"data-svelte-h":!0}),h(e)!=="svelte-1xbuxw2"&&(e.textContent=u),m=D(A,", and "),y=F(A,"CODE",{"data-svelte-h":!0}),h(y)!=="svelte-1iodlr5"&&(y.textContent=$),v=D(A," components, and the process would be the same, except they would receive "),i=F(A,"CODE",{"data-svelte-h":!0}),h(i)!=="svelte-1865azk"&&(i.textContent=H),O=D(A,", "),f=F(A,"CODE",{"data-svelte-h":!0}),h(f)!=="svelte-h02x1w"&&(f.textContent=I),E=D(A,", and "),C=F(A,"CODE",{"data-svelte-h":!0}),h(C)!=="svelte-1d4ufc5"&&(C.textContent=R),N=D(A," respectively.")},m(A,k){o(A,a,k),o(A,n,k),o(A,t,k),o(A,e,k),o(A,m,k),o(A,y,k),o(A,v,k),o(A,i,k),o(A,O,k),o(A,f,k),o(A,E,k),o(A,C,k),o(A,N,k)},p:P,d(A){A&&(p(a),p(n),p(t),p(e),p(m),p(y),p(v),p(i),p(O),p(f),p(E),p(C),p(N))}}}function Rn(c){let a,n,l,t,e,u,m,y,$,v,i,H,O,f,I,E,C,R,N,A,k,Ts,X,Ss,Z,Ms,ss,Ps,as,Rs,K,Y,ra="Form.Root",ns,G,ca="Form.Root",es,js,ts,Ns,ls,ps,os,Vs,rs,Ws,cs,qs,ys,zs,is,Ks,As,ds,Ds,Us,Cs,Ys,us,Gs,ms,Js,fs,Qs,U,J,ya="CustomInput.svelte",Bs,Q,ia="CustomInput.svelte",Fs,Xs,hs,Zs,$s,sa,Es,vs,_s,aa,gs,na,xs,ea;return a=new V({props:{$$slots:{default:[Za]},$$scope:{ctx:c}}}),l=new V({props:{$$slots:{default:[sn]},$$scope:{ctx:c}}}),e=new pa({props:{$$slots:{default:[an]},$$scope:{ctx:c}}}),m=new V({props:{$$slots:{default:[nn]},$$scope:{ctx:c}}}),$=new V({props:{$$slots:{default:[en]},$$scope:{ctx:c}}}),i=new la({props:{$$slots:{default:[tn]},$$scope:{ctx:c}}}),f=new W({props:{"data-language":"ts","data-theme":"dark",$$slots:{default:[ln]},$$scope:{ctx:c}}}),I=new W({props:{"data-language":"ts","data-theme":"light","data-non-pp":!0,$$slots:{default:[pn]},$$scope:{ctx:c}}}),C=new la({props:{$$slots:{default:[on]},$$scope:{ctx:c}}}),A=new W({props:{"data-language":"ts","data-theme":"dark",$$slots:{default:[rn]},$$scope:{ctx:c}}}),k=new W({props:{"data-language":"ts","data-theme":"light","data-non-pp":!0,$$slots:{default:[cn]},$$scope:{ctx:c}}}),X=new pa({props:{$$slots:{default:[yn]},$$scope:{ctx:c}}}),Z=new la({props:{$$slots:{default:[An]},$$scope:{ctx:c}}}),ss=new V({props:{$$slots:{default:[dn]},$$scope:{ctx:c}}}),as=new V({props:{$$slots:{default:[Dn]},$$scope:{ctx:c}}}),ns=new W({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[Cn]},$$scope:{ctx:c}}}),es=new W({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[un]},$$scope:{ctx:c}}}),ts=new V({props:{$$slots:{default:[mn]},$$scope:{ctx:c}}}),ps=new W({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[fn]},$$scope:{ctx:c}}}),os=new W({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[Bn]},$$scope:{ctx:c}}}),rs=new V({props:{$$slots:{default:[hn]},$$scope:{ctx:c}}}),cs=new V({props:{$$slots:{default:[$n]},$$scope:{ctx:c}}}),ys=new la({props:{$$slots:{default:[En]},$$scope:{ctx:c}}}),is=new V({props:{$$slots:{default:[vn]},$$scope:{ctx:c}}}),ds=new W({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[_n]},$$scope:{ctx:c}}}),Ds=new W({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[gn]},$$scope:{ctx:c}}}),Cs=new V({props:{$$slots:{default:[xn]},$$scope:{ctx:c}}}),us=new pa({props:{$$slots:{default:[wn]},$$scope:{ctx:c}}}),ms=new V({props:{$$slots:{default:[bn]},$$scope:{ctx:c}}}),fs=new V({props:{$$slots:{default:[Tn]},$$scope:{ctx:c}}}),Bs=new W({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[kn]},$$scope:{ctx:c}}}),Fs=new W({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[Hn]},$$scope:{ctx:c}}}),hs=new V({props:{$$slots:{default:[On]},$$scope:{ctx:c}}}),$s=new V({props:{$$slots:{default:[In]},$$scope:{ctx:c}}}),vs=new W({props:{"data-language":"svelte","data-theme":"dark",$$slots:{default:[Ln]},$$scope:{ctx:c}}}),_s=new W({props:{"data-language":"svelte","data-theme":"light","data-non-pp":!0,$$slots:{default:[Sn]},$$scope:{ctx:c}}}),gs=new V({props:{$$slots:{default:[Mn]},$$scope:{ctx:c}}}),xs=new V({props:{$$slots:{default:[Pn]},$$scope:{ctx:c}}}),{c(){_(a.$$.fragment),n=L(),_(l.$$.fragment),t=L(),_(e.$$.fragment),u=L(),_(m.$$.fragment),y=L(),_($.$$.fragment),v=L(),_(i.$$.fragment),H=L(),O=B("div"),_(f.$$.fragment),_(I.$$.fragment),E=L(),_(C.$$.fragment),R=L(),N=B("div"),_(A.$$.fragment),_(k.$$.fragment),Ts=L(),_(X.$$.fragment),Ss=L(),_(Z.$$.fragment),Ms=L(),_(ss.$$.fragment),Ps=L(),_(as.$$.fragment),Rs=L(),K=B("div"),Y=B("div"),Y.textContent=ra,_(ns.$$.fragment),G=B("div"),G.textContent=ca,_(es.$$.fragment),js=L(),_(ts.$$.fragment),Ns=L(),ls=B("div"),_(ps.$$.fragment),_(os.$$.fragment),Vs=L(),_(rs.$$.fragment),Ws=L(),_(cs.$$.fragment),qs=L(),_(ys.$$.fragment),zs=L(),_(is.$$.fragment),Ks=L(),As=B("div"),_(ds.$$.fragment),_(Ds.$$.fragment),Us=L(),_(Cs.$$.fragment),Ys=L(),_(us.$$.fragment),Gs=L(),_(ms.$$.fragment),Js=L(),_(fs.$$.fragment),Qs=L(),U=B("div"),J=B("div"),J.textContent=ya,_(Bs.$$.fragment),Q=B("div"),Q.textContent=ia,_(Fs.$$.fragment),Xs=L(),_(hs.$$.fragment),Zs=L(),_($s.$$.fragment),sa=L(),Es=B("div"),_(vs.$$.fragment),_(_s.$$.fragment),aa=L(),_(gs.$$.fragment),na=L(),_(xs.$$.fragment),this.h()},l(s){g(a.$$.fragment,s),n=S(s),g(l.$$.fragment,s),t=S(s),g(e.$$.fragment,s),u=S(s),g(m.$$.fragment,s),y=S(s),g($.$$.fragment,s),v=S(s),g(i.$$.fragment,s),H=S(s),O=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0});var r=ks(O);g(f.$$.fragment,r),g(I.$$.fragment,r),r.forEach(p),E=S(s),g(C.$$.fragment,s),R=S(s),N=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0});var Hs=ks(N);g(A.$$.fragment,Hs),g(k.$$.fragment,Hs),Hs.forEach(p),Ts=S(s),g(X.$$.fragment,s),Ss=S(s),g(Z.$$.fragment,s),Ms=S(s),g(ss.$$.fragment,s),Ps=S(s),g(as.$$.fragment,s),Rs=S(s),K=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var ws=ks(K);Y=F(ws,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),h(Y)!=="svelte-19dbibi"&&(Y.textContent=ra),g(ns.$$.fragment,ws),G=F(ws,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),h(G)!=="svelte-1hj45n8"&&(G.textContent=ca),g(es.$$.fragment,ws),ws.forEach(p),js=S(s),g(ts.$$.fragment,s),Ns=S(s),ls=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0});var Os=ks(ls);g(ps.$$.fragment,Os),g(os.$$.fragment,Os),Os.forEach(p),Vs=S(s),g(rs.$$.fragment,s),Ws=S(s),g(cs.$$.fragment,s),qs=S(s),g(ys.$$.fragment,s),zs=S(s),g(is.$$.fragment,s),Ks=S(s),As=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0});var Is=ks(As);g(ds.$$.fragment,Is),g(Ds.$$.fragment,Is),Is.forEach(p),Us=S(s),g(Cs.$$.fragment,s),Ys=S(s),g(us.$$.fragment,s),Gs=S(s),g(ms.$$.fragment,s),Js=S(s),g(fs.$$.fragment,s),Qs=S(s),U=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0,"data-metadata":!0});var bs=ks(U);J=F(bs,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),h(J)!=="svelte-1gf3xj6"&&(J.textContent=ya),g(Bs.$$.fragment,bs),Q=F(bs,"DIV",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),h(Q)!=="svelte-8bdc34"&&(Q.textContent=ia),g(Fs.$$.fragment,bs),bs.forEach(p),Xs=S(s),g(hs.$$.fragment,s),Zs=S(s),g($s.$$.fragment,s),sa=S(s),Es=F(s,"DIV",{"data-rehype-pretty-code-fragment":!0});var Ls=ks(Es);g(vs.$$.fragment,Ls),g(_s.$$.fragment,Ls),Ls.forEach(p),aa=S(s),g(gs.$$.fragment,s),na=S(s),g(xs.$$.fragment,s),this.h()},h(){j(O,"data-rehype-pretty-code-fragment",""),j(N,"data-rehype-pretty-code-fragment",""),j(Y,"data-rehype-pretty-code-title",""),j(Y,"data-language","svelte"),j(Y,"data-theme","dark"),j(G,"data-rehype-pretty-code-title",""),j(G,"data-language","svelte"),j(G,"data-theme","light"),j(K,"data-rehype-pretty-code-fragment",""),j(K,"data-metadata",""),j(ls,"data-rehype-pretty-code-fragment",""),j(As,"data-rehype-pretty-code-fragment",""),j(J,"data-rehype-pretty-code-title",""),j(J,"data-language","svelte"),j(J,"data-theme","dark"),j(Q,"data-rehype-pretty-code-title",""),j(Q,"data-language","svelte"),j(Q,"data-theme","light"),j(U,"data-rehype-pretty-code-fragment",""),j(U,"data-metadata",""),j(Es,"data-rehype-pretty-code-fragment","")},m(s,r){x(a,s,r),o(s,n,r),x(l,s,r),o(s,t,r),x(e,s,r),o(s,u,r),x(m,s,r),o(s,y,r),x($,s,r),o(s,v,r),x(i,s,r),o(s,H,r),o(s,O,r),x(f,O,null),x(I,O,null),o(s,E,r),x(C,s,r),o(s,R,r),o(s,N,r),x(A,N,null),x(k,N,null),o(s,Ts,r),x(X,s,r),o(s,Ss,r),x(Z,s,r),o(s,Ms,r),x(ss,s,r),o(s,Ps,r),x(as,s,r),o(s,Rs,r),o(s,K,r),ta(K,Y),x(ns,K,null),ta(K,G),x(es,K,null),o(s,js,r),x(ts,s,r),o(s,Ns,r),o(s,ls,r),x(ps,ls,null),x(os,ls,null),o(s,Vs,r),x(rs,s,r),o(s,Ws,r),x(cs,s,r),o(s,qs,r),x(ys,s,r),o(s,zs,r),x(is,s,r),o(s,Ks,r),o(s,As,r),x(ds,As,null),x(Ds,As,null),o(s,Us,r),x(Cs,s,r),o(s,Ys,r),x(us,s,r),o(s,Gs,r),x(ms,s,r),o(s,Js,r),x(fs,s,r),o(s,Qs,r),o(s,U,r),ta(U,J),x(Bs,U,null),ta(U,Q),x(Fs,U,null),o(s,Xs,r),x(hs,s,r),o(s,Zs,r),x($s,s,r),o(s,sa,r),o(s,Es,r),x(vs,Es,null),x(_s,Es,null),o(s,aa,r),x(gs,s,r),o(s,na,r),x(xs,s,r),ea=!0},p(s,r){const Hs={};r&2&&(Hs.$$scope={dirty:r,ctx:s}),a.$set(Hs);const ws={};r&2&&(ws.$$scope={dirty:r,ctx:s}),l.$set(ws);const Os={};r&2&&(Os.$$scope={dirty:r,ctx:s}),e.$set(Os);const Is={};r&2&&(Is.$$scope={dirty:r,ctx:s}),m.$set(Is);const bs={};r&2&&(bs.$$scope={dirty:r,ctx:s}),$.$set(bs);const Ls={};r&2&&(Ls.$$scope={dirty:r,ctx:s}),i.$set(Ls);const Aa={};r&2&&(Aa.$$scope={dirty:r,ctx:s}),f.$set(Aa);const da={};r&2&&(da.$$scope={dirty:r,ctx:s}),I.$set(da);const Da={};r&2&&(Da.$$scope={dirty:r,ctx:s}),C.$set(Da);const Ca={};r&2&&(Ca.$$scope={dirty:r,ctx:s}),A.$set(Ca);const ua={};r&2&&(ua.$$scope={dirty:r,ctx:s}),k.$set(ua);const ma={};r&2&&(ma.$$scope={dirty:r,ctx:s}),X.$set(ma);const fa={};r&2&&(fa.$$scope={dirty:r,ctx:s}),Z.$set(fa);const Ba={};r&2&&(Ba.$$scope={dirty:r,ctx:s}),ss.$set(Ba);const Fa={};r&2&&(Fa.$$scope={dirty:r,ctx:s}),as.$set(Fa);const ha={};r&2&&(ha.$$scope={dirty:r,ctx:s}),ns.$set(ha);const $a={};r&2&&($a.$$scope={dirty:r,ctx:s}),es.$set($a);const Ea={};r&2&&(Ea.$$scope={dirty:r,ctx:s}),ts.$set(Ea);const va={};r&2&&(va.$$scope={dirty:r,ctx:s}),ps.$set(va);const _a={};r&2&&(_a.$$scope={dirty:r,ctx:s}),os.$set(_a);const ga={};r&2&&(ga.$$scope={dirty:r,ctx:s}),rs.$set(ga);const xa={};r&2&&(xa.$$scope={dirty:r,ctx:s}),cs.$set(xa);const wa={};r&2&&(wa.$$scope={dirty:r,ctx:s}),ys.$set(wa);const ba={};r&2&&(ba.$$scope={dirty:r,ctx:s}),is.$set(ba);const Ta={};r&2&&(Ta.$$scope={dirty:r,ctx:s}),ds.$set(Ta);const ka={};r&2&&(ka.$$scope={dirty:r,ctx:s}),Ds.$set(ka);const Ha={};r&2&&(Ha.$$scope={dirty:r,ctx:s}),Cs.$set(Ha);const Oa={};r&2&&(Oa.$$scope={dirty:r,ctx:s}),us.$set(Oa);const Ia={};r&2&&(Ia.$$scope={dirty:r,ctx:s}),ms.$set(Ia);const La={};r&2&&(La.$$scope={dirty:r,ctx:s}),fs.$set(La);const Sa={};r&2&&(Sa.$$scope={dirty:r,ctx:s}),Bs.$set(Sa);const Ma={};r&2&&(Ma.$$scope={dirty:r,ctx:s}),Fs.$set(Ma);const Pa={};r&2&&(Pa.$$scope={dirty:r,ctx:s}),hs.$set(Pa);const Ra={};r&2&&(Ra.$$scope={dirty:r,ctx:s}),$s.$set(Ra);const ja={};r&2&&(ja.$$scope={dirty:r,ctx:s}),vs.$set(ja);const Na={};r&2&&(Na.$$scope={dirty:r,ctx:s}),_s.$set(Na);const Va={};r&2&&(Va.$$scope={dirty:r,ctx:s}),gs.$set(Va);const Wa={};r&2&&(Wa.$$scope={dirty:r,ctx:s}),xs.$set(Wa)},i(s){ea||(w(a.$$.fragment,s),w(l.$$.fragment,s),w(e.$$.fragment,s),w(m.$$.fragment,s),w($.$$.fragment,s),w(i.$$.fragment,s),w(f.$$.fragment,s),w(I.$$.fragment,s),w(C.$$.fragment,s),w(A.$$.fragment,s),w(k.$$.fragment,s),w(X.$$.fragment,s),w(Z.$$.fragment,s),w(ss.$$.fragment,s),w(as.$$.fragment,s),w(ns.$$.fragment,s),w(es.$$.fragment,s),w(ts.$$.fragment,s),w(ps.$$.fragment,s),w(os.$$.fragment,s),w(rs.$$.fragment,s),w(cs.$$.fragment,s),w(ys.$$.fragment,s),w(is.$$.fragment,s),w(ds.$$.fragment,s),w(Ds.$$.fragment,s),w(Cs.$$.fragment,s),w(us.$$.fragment,s),w(ms.$$.fragment,s),w(fs.$$.fragment,s),w(Bs.$$.fragment,s),w(Fs.$$.fragment,s),w(hs.$$.fragment,s),w($s.$$.fragment,s),w(vs.$$.fragment,s),w(_s.$$.fragment,s),w(gs.$$.fragment,s),w(xs.$$.fragment,s),ea=!0)},o(s){b(a.$$.fragment,s),b(l.$$.fragment,s),b(e.$$.fragment,s),b(m.$$.fragment,s),b($.$$.fragment,s),b(i.$$.fragment,s),b(f.$$.fragment,s),b(I.$$.fragment,s),b(C.$$.fragment,s),b(A.$$.fragment,s),b(k.$$.fragment,s),b(X.$$.fragment,s),b(Z.$$.fragment,s),b(ss.$$.fragment,s),b(as.$$.fragment,s),b(ns.$$.fragment,s),b(es.$$.fragment,s),b(ts.$$.fragment,s),b(ps.$$.fragment,s),b(os.$$.fragment,s),b(rs.$$.fragment,s),b(cs.$$.fragment,s),b(ys.$$.fragment,s),b(is.$$.fragment,s),b(ds.$$.fragment,s),b(Ds.$$.fragment,s),b(Cs.$$.fragment,s),b(us.$$.fragment,s),b(ms.$$.fragment,s),b(fs.$$.fragment,s),b(Bs.$$.fragment,s),b(Fs.$$.fragment,s),b(hs.$$.fragment,s),b($s.$$.fragment,s),b(vs.$$.fragment,s),b(_s.$$.fragment,s),b(gs.$$.fragment,s),b(xs.$$.fragment,s),ea=!1},d(s){s&&(p(n),p(t),p(u),p(y),p(v),p(H),p(O),p(E),p(R),p(N),p(Ts),p(Ss),p(Ms),p(Ps),p(Rs),p(K),p(js),p(Ns),p(ls),p(Vs),p(Ws),p(qs),p(zs),p(Ks),p(As),p(Us),p(Ys),p(Gs),p(Js),p(Qs),p(U),p(Xs),p(Zs),p(sa),p(Es),p(aa),p(na)),T(a,s),T(l,s),T(e,s),T(m,s),T($,s),T(i,s),T(f),T(I),T(C,s),T(A),T(k),T(X,s),T(Z,s),T(ss,s),T(as,s),T(ns),T(es),T(ts,s),T(ps),T(os),T(rs,s),T(cs,s),T(ys,s),T(is,s),T(ds),T(Ds),T(Cs,s),T(us,s),T(ms,s),T(fs,s),T(Bs),T(Fs),T(hs,s),T($s,s),T(vs),T(_s),T(gs,s),T(xs,s)}}}function jn(c){let a,n;const l=[c[0],Ka];let t={$$slots:{default:[Rn]},$$scope:{ctx:c}};for(let e=0;e<l.length;e+=1)t=oa(t,l[e]);return a=new Qa({props:t}),{c(){_(a.$$.fragment)},l(e){g(a.$$.fragment,e)},m(e,u){x(a,e,u),n=!0},p(e,[u]){const m=u&1?Ja(l,[u&1&&za(e[0]),u&0&&za(Ka)]):{};u&2&&(m.$$scope={dirty:u,ctx:e}),a.$set(m)},i(e){n||(w(a.$$.fragment,e),n=!0)},o(e){b(a.$$.fragment,e),n=!1},d(e){T(a,e)}}}const Ka={title:"Headless usage",description:"Have your own components or want to use native HTML elements? No problem."};function Nn(c,a,n){return c.$$set=l=>{n(0,a=oa(oa({},a),qa(l)))},a=qa(a),[a]}class Un extends Ya{constructor(a){super(),Ga(this,a,Nn,jn,Ua,{})}}export{Un as default,Ka as metadata};
